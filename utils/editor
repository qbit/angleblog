#!/usr/bin/env node

var fs = require('fs'),
path = require('path'),
connect = require('connect'),
ejs = require('ejs'),
port = process.env.PORT || 9876,
app,

o = {}, 
posts = {},
posts_file = path.join(__dirname, '../src/components/bolddaemon/posts.json');

fs.readFile(posts_file, function(e,d) {

	if (e) {
		throw e;
	}

	posts = JSON.parse(d);
});

console.log('Listening on %d for editing! %s', port, 'http://localhost:' + port);

app = connect()
	.use(connect.logger('dev'))
	.use(connect.bodyParser())
	.use(function(req, res) {
		if (req.url === '/') {
			fs.readFile('editor/editor.ejs', 'utf8', function(e, d) {
				d = ejs.render(d, {posts:posts});
				res.setHeader('Content-Type', 'text/html');
				res.end(d);
			});
		}
		if (req.url === '/edit') {
			res.end();
		}
		if (req.url.match('/post/')) {
			var idx = req.url.replace(/\/post\/(\d+)/, '$1');
			console.log('editing %s', idx);
			fs.readFile('editor/edit.ejs', 'utf8', function(e, d) {
				d = ejs.render(d, {post: posts[idx], id: idx});
				res.end(d);
			});
		}
		if (req.url === '/save') {
			req.body.author = 'Aaron Bieber';
			if (req.body.id) {
				posts[req.body.id].title = req.body.title;
				posts[req.body.id].body = req.body.body;
			} else {
				var date = new Date();
				req.body.date = date.getFullYear() + '-' + (date.getMonth()+1) + '-' + date.getDate();
				posts.unshift(req.body);
			}

			fs.writeFile( posts_file, JSON.stringify(posts), function() {
				res.end();
			});
		}
	});

app.listen(port, 'localhost');
